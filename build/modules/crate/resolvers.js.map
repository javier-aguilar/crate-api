{"version":3,"sources":["../../../src/modules/crate/resolvers.js"],"names":["getById","parentValue","crateId","models","Crate","findOne","where","id","crate","Error","getAll","orderBy","findAll","order","create","name","description","auth","user","role","params","roles","admin","update","remove","destroy"],"mappings":"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","sourcesContent":["// App Imports\nimport models from '../../setup/models'\nimport params from '../../config/params'\n\n// Get crate by ID\nexport async function getById(parentValue, { crateId }) {\n  const crate = await models.Crate.findOne({ where: { id: crateId } })\n\n  if (!crate) {\n    // Crate does not exists\n    throw new Error('The crate you are looking for does not exists or has been discontinued.')\n  } else {\n    return crate\n  }\n}\n\n// Get all crates\nexport async function getAll(parentValue, { orderBy }) {\n  return await models.Crate.findAll({ order: [['id', orderBy]] })\n}\n\n// Create crate\nexport async function create(parentValue, { name, description }, { auth }) {\n  if(auth.user && auth.user.role === params.user.roles.admin) {\n    return await models.Crate.create({\n      name,\n      description\n    })\n  } else {\n    throw new Error('Operation denied.')\n  }\n}\n\n// Update crate\nexport async function update(parentValue, { id, name, description }, { auth }) {\n  if(auth.user && auth.user.role === params.user.roles.admin) {\n    return await models.Crate.update(\n      {\n        name,\n        description\n      },\n      {where: {id}}\n    )\n  } else {\n    throw new Error('Operation denied.')\n  }\n}\n\n// Delete crate\nexport async function remove(parentValue, { id }, { auth }) {\n  if(auth.user && auth.user.role === params.user.roles.admin) {\n    return await models.Crate.destroy({where: {id}})\n  } else {\n    throw new Error('Operation denied.')\n  }\n}\n"],"file":"resolvers.js"}
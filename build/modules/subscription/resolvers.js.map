{"version":3,"sources":["../../../src/modules/subscription/resolvers.js"],"names":["get","parentValue","id","models","Subscription","findOne","where","include","model","User","as","Crate","getByUser","auth","user","findAll","userId","Error","getAll","create","crateId","remove","destroy"],"mappings":"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","sourcesContent":["// App Imports\nimport models from '../../setup/models'\n\n// Get subscription by ID\nexport async function get(parentValue, { id }) {\n  return await models.Subscription.findOne({\n    where: { id },\n    include: [\n      { model: models.User, as: 'user' },\n      { model: models.Crate, as: 'crate' },\n    ]\n  })\n}\n\n// Get subscription by user\nexport async function getByUser(parentValue, {}, { auth }) {\n  if(auth.user && auth.user.id > 0) {\n    return await models.Subscription.findAll({\n      where: {\n        userId: auth.user.id\n      },\n      include: [\n        {model: models.User, as: 'user'},\n        {model: models.Crate, as: 'crate'},\n      ]\n    })\n  } else {\n    throw new Error('Please login to view your subscriptions.')\n  }\n}\n\n// Get all subscriptions\nexport async function getAll() {\n  return await models.Subscription.findAll({\n    include: [\n      { model: models.User, as: 'user' },\n      { model: models.Crate, as: 'crate' },\n    ]\n  })\n}\n\n// Create subscription\nexport async function create(parentValue, { crateId }, { auth }) {\n  if(auth.user && auth.user.id > 0) {\n    return await models.Subscription.create({\n      crateId,\n      userId: auth.user.id\n    })\n  } else {\n    throw new Error('Please login to subscribe to this crate.')\n  }\n}\n\n// Delete subscription\nexport async function remove(parentValue, { id }, { auth }) {\n  if(auth.user && auth.user.id > 0) {\n    return await models.Subscription.destroy({where: {id, userId: auth.user.id}})\n  } else {\n    throw new Error('Access denied.')\n  }\n}"],"file":"resolvers.js"}
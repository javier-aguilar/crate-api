{"version":3,"sources":["../../src/setup/database.js"],"names":["databaseConfigEnv","databaseConfig","NODE_ENV","connection","process","env","DATABASE_URL","Sequelize","database","username","password","host","dialect","logging","console","info","authenticate","then","err","error"],"mappings":";;;;;;;;;AACA;;AAGA;;AACA;;AALA;AAGA;AAIA;AACA,IAAMA,iBAAiB,GAAGC,qBAAeC,aAAf,CAA1B;AACA,IAAIC,UAAU,GAAG,EAAjB;;AAEA,IAAGC,OAAO,CAACC,GAAR,CAAYC,YAAf,EAA6B;AAC3BH,EAAAA,UAAU,GAAG,IAAII,oBAAJ,CAAcH,OAAO,CAACC,GAAR,CAAYC,YAA1B,CAAb;AACD,CAFD,MAGK;AACHH,EAAAA,UAAU,GAAG,IAAII,oBAAJ,CAAcP,iBAAiB,CAACQ,QAAhC,EAA0CR,iBAAiB,CAACS,QAA5D,EAAsET,iBAAiB,CAACU,QAAxF,EAAkG;AAC7GC,IAAAA,IAAI,EAAEX,iBAAiB,CAACW,IADqF;AAE7GC,IAAAA,OAAO,EAAEZ,iBAAiB,CAACY,OAFkF;AAG7GC,IAAAA,OAAO,EAAE;AAHoG,GAAlG,CAAb;AAKD,C,CACD;;;AACAC,OAAO,CAACC,IAAR,CAAa,gCAAb;AAEAZ,UAAU,CACPa,YADH,GAEGC,IAFH,CAEQ,YAAM;AACVH,EAAAA,OAAO,CAACC,IAAR,CAAa,4BAAb;AACD,CAJH,WAKS,UAAAG,GAAG,EAAI;AACZJ,EAAAA,OAAO,CAACK,KAAR,CAAc,4CAAd,EAA4DD,GAA5D;AACD,CAPH;eASef,U","sourcesContent":["// Imports\nimport { Sequelize } from 'sequelize'\n\n// App Imports\nimport { NODE_ENV } from '../config/env'\nimport databaseConfig from '../config/database.json'\n\n// Load database config\nconst databaseConfigEnv = databaseConfig[NODE_ENV]\nvar connection = ''\n\nif(process.env.DATABASE_URL) {\n  connection = new Sequelize(process.env.DATABASE_URL)\n}\nelse {\n  connection = new Sequelize(databaseConfigEnv.database, databaseConfigEnv.username, databaseConfigEnv.password, {\n    host: databaseConfigEnv.host,\n    dialect: databaseConfigEnv.dialect,\n    logging: false\n  })\n}\n// Test connection\nconsole.info('SETUP - Connecting database...')\n\nconnection\n  .authenticate()\n  .then(() => {\n    console.info('INFO - Database connected.')\n  })\n  .catch(err => {\n    console.error('ERROR - Unable to connect to the database:', err)\n  })\n\nexport default connection\n"],"file":"database.js"}
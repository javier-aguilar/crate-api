{"version":3,"sources":["../../src/setup/upload.js"],"names":["server","console","info","storage","multer","diskStorage","destination","path","join","__dirname","filename","request","file","callback","fieldname","Date","now","extname","originalname","upload","single","post","serverConfig","endpoint","response","error","json","success"],"mappings":";;;;;;;;;AACA;;AACA;;AAGA;;AALA;AAIA;AAGA;AACe,kBAAUA,MAAV,EAAkB;AAC/BC,EAAAA,OAAO,CAACC,IAAR,CAAa,mBAAb,EAD+B,CAG/B;;AACA,MAAMC,OAAO,GAAGC,mBAAOC,WAAP,CAAmB;AACjCC,IAAAA,WAAW,EAAEC,iBAAKC,IAAL,CAAUC,SAAV,EAAqB,IAArB,EAA2B,IAA3B,EAAiC,QAAjC,EAA2C,QAA3C,EAAqD,SAArD,CADoB;AAGjCC,IAAAA,QAAQ,EAAE,kBAAUC,OAAV,EAAmBC,IAAnB,EAAyBC,QAAzB,EAAmC;AAC3CA,MAAAA,QAAQ,CAAC,IAAD,EAAOD,IAAI,CAACE,SAAL,GAAiB,GAAjB,GAAuBC,IAAI,CAACC,GAAL,EAAvB,GAAoCT,iBAAKU,OAAL,CAAaL,IAAI,CAACM,YAAlB,CAA3C,CAAR;AACD;AALgC,GAAnB,CAAhB;;AAQA,MAAMC,MAAM,GAAG,wBAAO;AACpBhB,IAAAA,OAAO,EAAEA;AADW,GAAP,EAEZiB,MAFY,CAEL,MAFK,CAAf,CAZ+B,CAgB/B;;AACApB,EAAAA,MAAM,CAACqB,IAAP,CAAYC,mBAAaH,MAAb,CAAoBI,QAAhC,EAA0C,UAACZ,OAAD,EAAUa,QAAV,EAAuB;AAC/DL,IAAAA,MAAM,CAACR,OAAD,EAAUa,QAAV,EAAoB,UAAUC,KAAV,EAAiB;AACzC,UAAI,CAACA,KAAL,EAAY;AACVD,QAAAA,QAAQ,CAACE,IAAT,CAAc;AACZC,UAAAA,OAAO,EAAE,IADG;AAEZf,UAAAA,IAAI,EAAED,OAAO,CAACC,IAAR,CAAaF;AAFP,SAAd;AAID,OALD,MAKO;AACLc,QAAAA,QAAQ,CAACE,IAAT,CAAc;AACZC,UAAAA,OAAO,EAAE,KADG;AAEZf,UAAAA,IAAI,EAAE;AAFM,SAAd;AAID;AACF,KAZK,CAAN;AAaD,GAdD;AAeD","sourcesContent":["// Imports\nimport path from 'path'\nimport multer from 'multer'\n\n// App Imports\nimport serverConfig from '../config/server.json'\n\n// File upload configurations and route\nexport default function (server) {\n  console.info('SETUP - Upload...')\n\n  // Set destination\n  const storage = multer.diskStorage({\n    destination: path.join(__dirname, '..', '..', 'public', 'images', 'uploads'),\n\n    filename: function (request, file, callback) {\n      callback(null, file.fieldname + '-' + Date.now() + path.extname(file.originalname))\n    }\n  })\n\n  const upload = multer({\n    storage: storage\n  }).single('file')\n\n  // Upload route\n  server.post(serverConfig.upload.endpoint, (request, response) => {\n    upload(request, response, function (error) {\n      if (!error) {\n        response.json({\n          success: true,\n          file: request.file.filename\n        })\n      } else {\n        response.json({\n          success: false,\n          file: null\n        })\n      }\n    })\n  })\n}\n"],"file":"upload.js"}